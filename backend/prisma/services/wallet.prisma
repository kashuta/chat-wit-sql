// Wallet service schema
generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/wallet-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_WALLET")
}

// User model
model User {
  id        Int         @id @default(autoincrement())
  uuid      String      @unique
  username  String
  email     String      @unique
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  wallets   Wallet[]
  
  @@map("users")
}

// Wallet model
model Wallet {
  id          Int         @id @default(autoincrement())
  userId      Int         @map("user_id")
  balance     Decimal     @default(0)
  currency    String
  isActive    Boolean     @default(true) @map("is_active")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  user        User        @relation(fields: [userId], references: [id])
  transactions Transaction[]
  
  @@map("wallets")
}

// Transaction model
model Transaction {
  id            Int       @id @default(autoincrement())
  walletId      Int       @map("wallet_id")
  amount        Decimal
  type          String    // DEPOSIT, WITHDRAWAL, TRANSFER, etc.
  status        String    // PENDING, APPROVED, REJECTED, etc.
  reference     String?
  description   String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  processedAt   DateTime? @map("processed_at")
  wallet        Wallet    @relation(fields: [walletId], references: [id])
  
  @@map("transactions")
} 