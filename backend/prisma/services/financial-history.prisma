// Financial History service schema
generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/financial-history-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_FINANCIAL_HISTORY")
}

// User reference model
model User {
  id                Int               @id @default(autoincrement())
  uuid              String            @unique
  username          String
  financialRecords  FinancialRecord[]
  bonuses           Bonus[]
  
  @@map("users")
}

// Financial Record model
model FinancialRecord {
  id                Int      @id @default(autoincrement())
  userId            Int      @map("user_id")
  transactionId     String?  @map("transaction_id")
  amount            Decimal
  currency          String
  recordType        String   @map("record_type") // DEPOSIT, WITHDRAWAL, BET, WIN, BONUS, etc.
  source            String   // WALLET, CASINO, SPORTS, BONUS, etc.
  status            String   // PENDING, COMPLETED, FAILED, etc.
  reference         String?  // External reference or ID
  description       String?
  createdAt         DateTime @default(now()) @map("created_at")
  processedAt       DateTime? @map("processed_at")
  user              User     @relation(fields: [userId], references: [id])
  
  @@map("financial_records")
}

// Bonus model
model Bonus {
  id                Int      @id @default(autoincrement())
  userId            Int      @map("user_id")
  bonusCode         String?  @map("bonus_code")
  bonusType         String   @map("bonus_type") // DEPOSIT, CASHBACK, FREE_BET, etc.
  amount            Decimal
  currency          String
  status            String   // ACTIVE, USED, EXPIRED, etc.
  validFrom         DateTime @map("valid_from")
  validTo           DateTime @map("valid_to")
  wagered           Decimal  @default(0)
  wagerRequirement  Decimal  @map("wager_requirement")
  createdAt         DateTime @default(now()) @map("created_at")
  usedAt            DateTime? @map("used_at")
  user              User     @relation(fields: [userId], references: [id])
  
  @@map("bonuses")
} 