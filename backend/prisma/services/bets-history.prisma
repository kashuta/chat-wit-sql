generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/bets-history-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_BETS_HISTORY")
}

model CasinoBet {
  id                 Int       @id @default(autoincrement())
  userId             Int
  gameId             Int?
  roundId            String?   @unique
  currencyId         String
  createdAt          DateTime  @default(now())
  updatedAt          DateTime
  betAmount          Int
  winAmount          Int?
  status             String
  finishedAt         DateTime?
  bonusBalanceAfter  Int?
  bonusBalanceBefore Int       @default(0)
  bonusId            Int?      @default(0)
  realBalanceAfter   Int?
  realBalanceBefore  Int       @default(0)
  campaignId         String?
  finishedBy         String?
  txIds              String[]
  bonusProductType   String[]
}

model CasinoGame {
  id               Int       @id @default(autoincrement())
  gameId           Int       @unique
  slug             String
  name             String
  type             String?
  provider         String
  aggregator       String?
  providerEnabled  Boolean   @default(true)
  enabled          Boolean   @default(false)
  archived         Boolean?  @default(false)
  publicationStart DateTime?
  publicationEnd   DateTime?
  createdAt        DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt        DateTime  @db.Timestamptz(3)

  @@index([gameId])
}

model CasinoTransaction {
  id                 Int      @id @default(autoincrement())
  userId             Int
  txId               String
  currencyId         String
  betAmount          Int
  winAmount          Int
  date               String
  time               String
  result             String
  description        String
  type               String
  betId              Int?
  bonusBalanceAfter  Int      @default(0)
  bonusBalanceBefore Int      @default(0)
  bonusId            Int?     @default(0)
  realBalanceAfter   Int      @default(0)
  realBalanceBefore  Int      @default(0)
  campaignId         String?
  betTxId            String?
  originalTxId       String?
  refundedRound      Boolean?
  roundClosed        Boolean?
  amount             Int      @default(0)
  bonusProductType   String[]

  @@index([betId])
}

model SportBet {
  id             Int       @id @default(autoincrement())
  userId         Int
  orderNumber    String    @unique
  currencyId     String
  betAmount      Int
  winAmount      Int?
  playerProfit   Int?
  betType        Int
  createdAt      DateTime  @default(now())
  updatedAt      DateTime
  settlementTime DateTime?
  status         Int       @default(0)
  systemIndex    Int?
}

model SportBetEvent {
  id         Int    @id @default(autoincrement())
  sportBetId Int
  stakeId    String
  type       String
  name       String
  odds       Float
  sport      String
  eventScore String
  score      String
  market     String
  outcome    String
  period     String
  startDate  String
  result     Int

  @@index([sportBetId])
}

model SportTransaction {
  id          Int     @id @default(autoincrement())
  userId      Int
  txId        String
  currencyId  String
  betAmount   Int     @default(0)
  winAmount   Int?
  factor      Float?
  date        String
  time        String
  result      String?
  description String?
  orderNumber String  @default("0")

  @@index([orderNumber])
}
